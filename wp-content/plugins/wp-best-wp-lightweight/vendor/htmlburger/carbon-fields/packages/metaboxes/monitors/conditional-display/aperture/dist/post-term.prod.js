"use strict";var _immer=_interopRequireDefault(require("immer")),_callbagStartWith=_interopRequireDefault(require("callbag-start-with")),_callbagFromDelegatedEvent=_interopRequireDefault(require("callbag-from-delegated-event")),_callbagBasics=require("callbag-basics"),_hooks=require("@wordpress/hooks"),_data=require("@wordpress/data"),_lodash=require("lodash"),_core=require("@carbon-fields/core");function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function ownKeys(r,e){var t,a=Object.keys(r);return Object.getOwnPropertySymbols&&(t=Object.getOwnPropertySymbols(r),e&&(t=t.filter(function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable})),a.push.apply(a,t)),a}function _objectSpread(r){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?ownKeys(t,!0).forEach(function(e){_defineProperty(r,e,t[e])}):Object.getOwnPropertyDescriptors?Object.defineProperties(r,Object.getOwnPropertyDescriptors(t)):ownKeys(t).forEach(function(e){Object.defineProperty(r,e,Object.getOwnPropertyDescriptor(t,e))})}return r}function _defineProperty(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function _toConsumableArray(e){return _arrayWithoutHoles(e)||_iterableToArray(e)||_nonIterableSpread()}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance")}function _iterableToArray(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}function _arrayWithoutHoles(e){if(Array.isArray(e)){for(var r=0,t=new Array(e.length);r<e.length;r++)t[r]=e[r];return t}}var TAGS_DELIMITER=",";function patchWordPressTagBoxAPI(a,o){a["original_".concat(o)]=a[o],a[o]=function(){var e=new Event("change"),r=window.jQuery(arguments.length<=0?void 0:arguments[0]).closest(".postbox").find("textarea.the-tags").get(0),t=a["original_".concat(o)].apply(a,arguments);return r.dispatchEvent(e),t}}function getTermsFromChecklist(a){return _toConsumableArray(document.querySelectorAll("#".concat(a,'checklist input[type="checkbox"]:checked'))).reduce(function(e,r){var t=parseInt(r.value,10);return e[a].push(t),e},_defineProperty({},a,[]))}function getTermsFromText(e){var r=document.querySelector("#tagsdiv-".concat(e," textarea.the-tags"));return _defineProperty({},e,r.value?r.value.split(TAGS_DELIMITER):[])}function trackHierarchicalTaxonomies(){return _toConsumableArray(document.querySelectorAll('div[id^="taxonomy-"]')).map(function(e){var a=e.id.replace("taxonomy-","");return(0,_callbagBasics.pipe)((0,_callbagFromDelegatedEvent.default)(e.querySelector("#".concat(a,"checklist")),'input[type="checkbox"]',"change"),(0,_callbagBasics.scan)(function(e,r){var t=r.target;return(0,_immer.default)(e,function(e){var r=parseInt(t.value,10);t.checked?e[a].push(r):(0,_lodash.pull)(e[a],r)})},_defineProperty({},a,[])),(0,_callbagStartWith.default)(getTermsFromChecklist(a)))})}function trackNonHierarchicalTaxonomies(){return _toConsumableArray(document.querySelectorAll('div[id^="tagsdiv-"]')).map(function(e){var t=e.id.replace("tagsdiv-","");return(0,_callbagBasics.pipe)((0,_callbagBasics.fromEvent)(e.querySelector("textarea.the-tags"),"change"),(0,_callbagBasics.map)(function(e){var r=e.target;return _defineProperty({},t,r.value?r.value.split(TAGS_DELIMITER):[])}),(0,_callbagStartWith.default)(getTermsFromText(t)))})}window.tagBox&&(patchWordPressTagBoxAPI(window.tagBox,"parseTags"),patchWordPressTagBoxAPI(window.tagBox,"flushTags")),(0,_hooks.addFilter)("carbon-fields.conditional-display-post-term.classic","carbon-fields/metaboxes",function(){return(0,_callbagBasics.pipe)(_callbagBasics.merge.apply(void 0,_toConsumableArray(trackHierarchicalTaxonomies()).concat(_toConsumableArray(trackNonHierarchicalTaxonomies()))),(0,_callbagBasics.scan)(function(e,r){return{post_term:_objectSpread({},e.post_term,{},r)}},{post_term:{}}))}),(0,_hooks.addFilter)("carbon-fields.conditional-display-post-term.gutenberg","carbon-fields/metaboxes",function(){var e=(0,_data.select)("core").getTaxonomies,t=(0,_data.select)("core/editor").getEditedPostAttribute;return(0,_callbagBasics.pipe)((0,_core.fromSelector)(e,{per_page:-1}),(0,_callbagBasics.filter)(Boolean),(0,_callbagBasics.map)(function(e){var r=e.map(function(e){return[e.slug,t(e.rest_base)||[]]});return{post_term:(0,_lodash.fromPairs)(r)}}))});